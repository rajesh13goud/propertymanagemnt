{"version":3,"sources":["components/Logo/house.png","components/imageLink/imageLink.js","serviceWorker.js","components/Navigation/Navigation.js","components/Signin/Signin.js","components/Logo/Logo.js","components/Rank/Rank.js","components/Navigation/ErrorBoundry.js","components/imageLink/gas.js","components/imageLink/blockchain.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","ImageLink","props","_this","Object","_home_sreeharsha_Documents_RajeshD_codingChallenge_propertynew_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_sreeharsha_Documents_RajeshD_codingChallenge_propertynew_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_sreeharsha_Documents_RajeshD_codingChallenge_propertynew_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","ipfsHash","data","ownername","location","address","price","asset_id","redirect","onButtonSubmit","bind","_home_sreeharsha_Documents_RajeshD_codingChallenge_propertynew_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","onImageChange","onOwnerChange","onLocationChange","onAddressChange","onPriceChange","e","_this2","console","log","preventDefault","file","target","files","reader","window","FileReader","readAsDataURL","onloadend","setState","Buffer","result","value","_this3","formData","FormData","document","querySelector","append","warn","axios","post","headers","Content-Type","then","response","JSON","stringify","onRouteChange","_this4","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","children","id","htmlFor","type","name","onChange","onClick","role","React","Component","Boolean","hostname","match","Navigation","_ref","isSignedIn","react_default","style","display","justifyContent","Signin","classCallCheck","possibleConstructorReturn","getPrototypeOf","onEmailChange","event","signInEmail","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","body","email","password","json","user","loadUser","Logo","tilt_default","options","max","height","width","paddingTop","alt","src","brain","Rank","entries","concat","ErrorBoundry","hasError","error","info","BlockChain","blockHash","blockNumber","contractAddress","gasUsed","trxUsed","ref","assetid","componentDidMount","assertThisInitialized","pathname","split","form","Nav","Link","href","initialState","input","route","image","searchfield","imageIn","isGasprice","isBlock","mobile","joined","Date","App","loadForm","entered","invoice","onSearchChange","_this$state","components_Navigation_Navigation","components_Logo_Logo","components_Rank_Rank","Navigation_ErrorBoundry","imageLink","components_Signin_Signin","blockchain","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e8cec284.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/house.b9f220aa.png\";","import React from \"react\";\n//import  ipfs from './ipfs';\n// import { Redirect } from 'react-router-dom'\nimport axios from \"axios\";\n// import { BrowserRouter as Router, Route, Link} from \"react-router-dom\";\n// import {Navbar, Nav, Form, FormControl, Button } from 'react-bootstrap';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// import Gas from './gas';\n// import useForm from 'react-hook-form';\n// import BlockChain from './blockchain';\n// import Gas from './gas';\n\nclass ImageLink extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ipfsHash: \"\",\n      data: null,\n      // ownerid: '',\n      ownername: \"\",\n      location: \"\",\n      address: \"\",\n      price: \"\",\n      asset_id: \"\",\n      redirect: false\n    };\n\n    this.onButtonSubmit = this.onButtonSubmit.bind(this);\n    this.onImageChange = this.onImageChange.bind(this);\n    // this.onIdChange = this.onIdChange.bind(this);\n    this.onOwnerChange = this.onOwnerChange.bind(this);\n    this.onLocationChange = this.onLocationChange.bind(this);\n    this.onAddressChange = this.onAddressChange.bind(this);\n    this.onPriceChange = this.onPriceChange.bind(this);\n  }\n\n  onImageChange(e) {\n    console.log(\"capture file...\");\n    e.preventDefault();\n    const file = e.target.files[0];\n    const reader = new window.FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      this.setState({ data: Buffer(reader.result) });\n      console.log(\"buffer\", this.state.data);\n    };\n  }\n  // onIdChange(e){\n  //     this.setState({ownerid:e.target.value})\n  // }\n  onOwnerChange(e) {\n    this.setState({ ownername: e.target.value });\n  }\n  onLocationChange(e) {\n    this.setState({ location: e.target.value });\n  }\n  onAddressChange(e) {\n    this.setState({ address: e.target.value });\n  }\n  onPriceChange(e) {\n    this.setState({ price: e.target.value });\n  }\n  onButtonSubmit(e) {\n    e.preventDefault();\n\n    this.setState({\n      redirect: true\n    });\n    console.log(\"on submit..\");\n    const formData = new FormData();\n    var file = document.querySelector(\"#file\");\n    formData.append(\"buffer\", file.files[0]);\n    // formData.append('ownerid',this.state.ownerid);\n    formData.append(\"location\", this.state.location);\n    formData.append(\"ownername\", this.state.ownername);\n    formData.append(\"address\", this.state.address);\n    formData.append(\"price\", this.state.price);\n\n    const config = {\n      headers: { \"Content-Type\": \"multipart/form-data\" }\n    };\n    const url = \"http://localhost:4000/sendImage\";\n    console.warn(\"formdata\", formData);\n    //    window.location.href = '/ocr';\n    axios.post(url, formData, config).then(response => {\n      console.log(JSON.stringify(response));\n      // window.location.href='/addBlockchain:/' + asset_id;\n      this.props.onRouteChange(\"gas\");\n    });\n  }\n  render() {\n    // const { asset_id } = this.props;\n    return (\n      <div>\n        <p className=\"light blue f3\">\n          {\"Add your property\"}\n          {this.props.children}\n        </p>\n        <div className=\"flex\">\n          <div className=\"form center pa4 br3 shadow-5\">\n            <fieldset id=\"land_details\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f1 fw6 ph0 mh0 center\">Land Details</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n                  Owner Name\n                </label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  value={this.state.ownername}\n                  name=\"owner-name\"\n                  id=\"owner-name\"\n                  onChange={this.onOwnerChange}\n                />\n              </div>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"land-address\">\n                  Land Details\n                </label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"land-address\"\n                  id=\"location-address\"\n                  onChange={this.onLocationChange}\n                />\n              </div>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"address\">\n                  Address\n                </label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"address\"\n                  id=\"address\"\n                  onChange={this.onAddressChange}\n                />\n              </div>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"number\">\n                  Price\n                </label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"number\"\n                  name=\"price\"\n                  id=\"price\"\n                  onChange={this.onPriceChange}\n                />\n              </div>\n              <input\n                className=\"f4 pa2 w-70 center\"\n                id=\"file\"\n                type=\"file\"\n                name=\"file\"\n                onChange={e => this.onImageChange(e)}\n              />\n              {/* <img src={`https://gateway.ipfs.io/ipfs/${this.state.data}`} alt=\"\"/> */}\n              <button\n                className=\"w-30 grow f4 link ph3 pv2 dib white bg-light-purple\"\n                onClick={e => {\n                  this.onButtonSubmit(e);\n                }}\n                role=\"status\"\n              >\n                Add Asset\n              </button>\n            </fieldset>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ImageLink;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nimport React from 'react';\n// import Gas from '../imageLink/gas';\n// import { Redirect } from 'react-router-dom'\n\n// import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\nconst Navigation = ({onRouteChange, isSignedIn}) => {\n   \n    if (isSignedIn) {\n        return(\n            <nav style = {{display: 'flex', justifyContent: 'flex-end'}}>\n                <p onClick={() => onRouteChange('signout')} className = 'f3 link dim black underline pa3 pointer'>Sign Out</p>\n            </nav>\n\n        );\n    } else {\n        return (\n            <nav style = {{display: 'flex', justifyContent: 'flex-end'}}>\n               <p onClick={() => onRouteChange('signin')} className = 'f3 link dim black underline pa3 pointer'>Sign In</p>\n               <p onClick={() => onRouteChange('register')} className = 'f3 link dim black underline pa3 pointer'>Register</p>\n            </nav>\n            \n        );\n    }\n   \n}\nexport default Navigation;","\nimport React from 'react';\n\n\n// const Signin = ({onRouteChange}) => {\nclass Signin extends React.Component {\n    constructor() {\n    super();\n    this.state = {\n        signInEmail: '',\n        signInPassword: ''\n    }\n}\n    onEmailChange = (event) => {\n        this.setState({signInEmail: event.target.value})\n    }\n    onPasswordChange = (event) => {\n        this.setState({signInPassword: event.target.value})\n    }\n    onSubmitSignIn = () => {\n        fetch('http://localhost:4000/signin', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                email: this.state.signInEmail,\n                password: this.state.signInPassword\n            })\n        })\n            .then(response => response.json())\n            .then(user => {\n                if(user.id){\n                    this.props.loadUser(user);\n                    this.props.onRouteChange('home');\n        \n            }\n        })\n        // this.props.onRouteChange('home');\n\n    }\n    render() {\n        const { onRouteChange } = this.props;\n        return(\n     <article className=\"br3 ba  b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n        <main className=\"pa4 black-80\">\n            <div className=\"measure\">\n                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                    <legend className=\"f1 fw6 ph0 mh0 center\">Sign In</legend>\n                    <div className=\"mt3\">\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                        type=\"email\" \n                        name=\"email-address\" \n                        id=\"email-address\"\n                        onChange = {this.onEmailChange} />\n                    </div>\n                    <div className=\"mv3\">\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                        type=\"password\" \n                        name=\"password\" \n                        id=\"password\"\n                        onChange = {this.onPasswordChange} />\n                    </div>\n                </fieldset>\n                    <div className=\"\">\n                        <input onClick={this.onSubmitSignIn}  className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\" />\n                         \n                    </div>\n                    <div className=\"lh-copy mt3\">\n                        <p onClick={() => onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\n                    </div>\n            </div>\n        </main>\n     </article> \n        )\n    }\n  \n}\nexport default Signin;","import React from 'react';\nimport Tilt from 'react-tilt';\nimport './Logo.css';\nimport brain from './house.png';\n\nconst Logo = () => {\n    return (\n    <div >\n         <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 55 }} style={{ height: 100, width: 100 }} >\n             <div className=\"Tilt-inner pa3\"> \n                 <img style= {{paddingTop: '5px'}} alt = 'logo' src = {brain} /> \n             </div>\n         </Tilt>\n\n    </div>\n    );\n}\nexport default Logo;","import React from 'react';\n// import './Rank.css';\n\n\n\nconst Rank = ({ name, entries }) => {\n    return (\n        <div>\n            <div className='dark blue f1'>\n                {`hey ${name}, Welcome to Heptagon...`}\n                {/* <legend className=\"f1 fw6 ph0 mh0 center\" onImageSubmit={onImageSubmit}>your entries</legend> */}\n            </div>\n            <div className='blue f3'>\n                {`#${entries}`}\n            </div>\n        </div>\n    );\n}\nexport default Rank;","import React from 'react';\n\nclass ErrorBoundry extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError : false\n        }\n    }\n    componentDidCatch(error, info){\n        this.setState({hasError:true})\n    }\n    render(){\n        if(this.state.hasError){\n            return <h1>Oooops. That is not good</h1>\n        }\n        return this.props.children;\n    }\n}\nexport default ErrorBoundry;\n","import React from 'react';\n// const axios = require('axios');\n// const web3 = require('web3');\n\nclass Gas extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            'gasprice':'',\n            'eth':''\n        }\nthis.componentDidMount = this.componentDidMount.bind(this);\n\n    }\nasync componentDidMount(){\n    const gasPrice = await (await fetch(\"http://localhost:4000/gas\")).json()\n      this.setState({gasprice: gasPrice['message']})\n      this.setState({eth: gasPrice['txCost']})\n      .then(response => {console.log(response.json())})\n      this.props.onRouteChange('blockchain');\n  \n  \n//   window.addEventListener('load', async () => {\n//     // Modern dapp browsers...\n//     if (window.ethereum) {\n//         window.web3 = new Web3(ethereum);\n//         try {\n//             // Request account access if needed\n//             await ethereum.enable();\n//             // Acccounts now exposed\n//             web3.eth.sendTransaction({to: contractAddress, value: web3.utils.toWei(\"0.00001\", \"ether\"), from: web3.eth.accounts[0], gas: 4700000});\n//         } catch (error) {\n//             // User denied account access...\n//         }\n//     }\n//     // Legacy dapp browsers...\n//     else if (window.web3) {\n//         window.web3 = new Web3(web3.currentProvider);\n//         // Acccounts always exposed\n//         web3.eth.sendTransaction({/* ... */});\n//     }\n//     // Non-dapp browsers...\n//     else {\n//         console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n//     }\n// })\n}\n    // onAssetSubmit(e) {\n    //     console.log(`here I'm`)\n    //     const success = function(result){\n    //         console.log(result);\n    //         document.getElementById('gasprice').value = result.message;\n    //         document.getElementById('eth').value = result.txCost;\n    //     }\n    //     const url = \"http://localhost:4000/gas\";\n    //     return axios.get(url,success)\n    //     .then(response => response.json())\n        \n    // }\n    render(){\n    const {onRouteChange} = this.props;\n    return(\n      <body>\n        <section>\n                <div className=\"flex\">\n                    <div className=\"form center pa4 br3 shadow-5\">\n                        <h6 className=\"my_asset\">Cost Info</h6>\n                        <form className=\"auth_form\" id=\"saveAssetzForm\" name=\"saveAssetzForm\" >\n                            <p className=\"mt-3\">Please check and confirm the rate Details below,</p>\n                            <div className=\"form-group pa4 br3 center\">\n                              <label>Gas Price</label>\n                              <input className=\"form-control transparent\" type=\"text\" value={this.state.gasprice} name=\"gasprice\" placeholder=\"0.02\" onChange={this.componentDidMount} />\n                             </div>\n                             <div className=\"form-group pa4 br3 center\">\n                                 <label>ETH</label>\n                                 <input className=\"form-control\" type=\"text\" value={this.state.eth} name=\"eth\" placeholder=\"0.000002\" onChange={this.componentDidMount} />\n                             </div>\n                             <div className=\"form-group pa4 br3 center\">\n                                 <label>Network</label>\n                                 <input className=\"form-control\" type=\"text\" id=\"network\" name=\"network\" placeholder=\"Ethereum Testnet\" />\n                         <div className=\"\">\n                         {/* <button onClick={(e)=>{this.onAssetSubmit(e)}}  className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" >\n                         Add Asset </button> */}\n                      \n                         </div> \n                             </div>\n                         </form>\n                     </div>\n                 </div>\n         </section>\n         <div className=\"footer\">\n             <div className=\"home_container\">\n                 <button className=\"start_btn mb-1\" id=\"form\" onClick={()=> onRouteChange('blockhain')}>Save To BlockChain</button>\n             </div>\n         </div>\n        <div className=\"modal show\" id=\"myModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"mySmallModalLabel\" aria-hidden=\"true\">\n            <div className=\"modal-dialog modal-sm\">\n                <div className=\"modal-body\">\n                        <div className=\"spinner-border text-primary\" role=\"status\">\n                              <span className=\"sr-only\">Loading...</span>\n                         </div>\n                         <p className=\"mb-1\">Saving permanently to ethreum blockchain</p>\n                         <small>Please do not exit the app</small>\n                 </div>\n             </div>\n         </div>\n      </body>\n     )\n    }\n }\n\nexport default Gas;\n// import React from 'react';\n// import axios from 'axios';\n\n// class Gas extends React.Component{\n//     constructor(props){\n//         super(props);\n//         this.state = {\n//             gasPrice:'',\n//             eth: ''\n//         }\n//     // this.onGasPrice = this.onGasPrice.bind(this);\n//     // this.onTrigger = this.onTrigger.bind(this);\n//     this.componentDidMount = this.componentDidMount.bind(this);\n//     }\n// //    async componentDidMount() {\n// //        const price = await (await fetch(\"http://localhost:4000/gas\")).json()\n// //        this.setState({price})\n// //    console.log(price)\n// //    console.log({gasPrice:price['message'], eth:price['txCost']})\n// //    }\n   \n\n// async componentDidMount(){\n//   const gasPrice = await (await fetch(\"http://localhost:4000/gas\")).json()\n//     this.setState({gasPrice: gasPrice['message']})\n//     this.setState({eth: gasPrice['txCost']})\n//     // .then(response => response.json())\n\n// }\n// //    onEth() {\n// //        const target = axios.get(\"http://localhost:4000/gas\").json()\n// //             this.setState({eth:target['txCost']})\n// //    }\n\n//    render(){\n//     // const Gas = ({gasPrice,eth}) => {\n//        return(\n//            <div className='flex'>\n//                 <div className='form center pa4 br3 shadow-5'>\n//                     <fieldset id=\"land_details\" className=\"ba b--transparent ph0 mh0\">\n//                       <legend className=\"f1 fw6 ph0 mh0 center\">Cost</legend>\n//                         <div className=\"mt3\">\n//                          <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Gas Price</label>\n//                          <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n//                                     type=\"text\"\n//                                     value={this.state.gasPrice}\n//                                     name=\"gasPrice\"\n//                                     placeholder=\"0000000\"\n//                                     onChange={this.componentDidMount}\n//                                      />\n//                         </div>\n//                         <div className=\"mt3\">\n//                                 <label className=\"db fw6 lh-copy f6\" htmlFor=\"land-address\">Eth Cost</label>\n//                                 <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n//                                     type=\"text\"\n//                                     value={this.state.eth}\n//                                     name=\"eth\"\n//                                     onChange={this.componentDidMount}\n//                                      />\n//                         </div>\n//                     </fieldset>\n//                 </div>\n\n//            </div>\n\n\n//        )\n//    }\n\n// }\n// export default Gas;","import React from \"react\";\nimport { Nav } from \"react-bootstrap\";\n\nclass BlockChain extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      blockHash: \"\",\n      blockNumber: \"\",\n      contractAddress: \"\",\n      gasUsed: \"\",\n      trxUsed: \"\",\n      ref: \"\",\n      assetid: \"\"\n    };\n    // setTimeout(\n    //     function() {\n    //         this.componentDidMount = this.componentDidMount.bind(this);\n    //     },\n    //     60000\n    // );\n    this.componentDidMount = this.componentDidMount.bind(this);\n    // let assetid = window.location.pathname.split('/')[2];\n    // console.log('asseytid' + assetid);\n    // this.setState({assetid: this.props.assetid})\n  }\n\n  // async componentDidMount(){\n  //     const form = await (await fetch(\"http://localhost:4000/addBlockchain/:assetid\")).json()\n  //     this.setState({blockHash: form['blockHash']})\n  //     this.setState({blockNumber:form['blockNumber']})\n  //     this.setState({contractAddress:form['contract']})\n  //     this.setState({gasUsed: form['gasUsed']})\n  //     this.setState({trxUsed: form['transactionHash']})\n  //     .then(response => response.json())\n  //     this.props.onRouteChange('signin');\n  // }\n\n  // onSaveBC = (e) => {\n  //     e.preventDefault()\n  async componentDidMount() {\n    // this.setState({assetid: form.assetid})\n    // let assetid = 'e195a578-93a5-491e-b362-b0004aaee306'\n    let assetid = window.location.pathname.split(\"/\")[2];\n    // var assetid = this.props.asset_id;\n    console.log(\"asset in FEblock\", assetid);\n    const form = await (await fetch(\n      \"http://localhost:4000/addBlockchain/\" + assetid\n    )).json();\n    this.setState({ blockHash: form[\"blockhash\"] });\n    this.setState({ blockNumber: form[\"blocknumber\"] });\n    this.setState({ contractAddress: form[\"contract\"] });\n    this.setState({ gasUsed: form[\"gasused\"] });\n    this.setState({ trxUsed: form[\"trxused\"] });\n\n    this.setState({\n      ref: `https://ropsten.etherscan.io/tx/${this.state.trxUsed}`\n    }).then(response => response.json());\n    // console.log('asseytid' + assetid);\n    // var ref = `https://ropsten.etherscan.io/tx/${this.state.trxUsed}`\n    // document.getElementById('etherscan').innerHTML = ref;\n    // document.getElementById('etherscan').setAttribute('href', ref);\n    this.props.onRouteChange(\"signin\");\n  }\n\n  // }\n  render() {\n    // console.log('props', this.props);\n    return (\n      <body>\n        <section>\n          <div className=\"flex\">\n            <div className=\"flex\">\n              <div className=\"form center pa4 br3 shadow-5\">\n                <fieldset\n                  id=\"land_details\"\n                  className=\"ba b--transparent ph0 mh0\"\n                >\n                  <legend className=\"f1 fw6 ph0 mh0 center\">\n                    Land Details\n                  </legend>\n                  <div className=\"mt3\">\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"block-hash\">\n                      Block Hash\n                    </label>\n                    <input\n                      className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                      type=\"text\"\n                      value={this.state.blockHash}\n                      name=\"block-hash\"\n                      onChange={this.componentDidMount}\n                    />\n                  </div>\n                  <div className=\"mt3\">\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"block-number\">\n                      Block Number{\" \"}\n                    </label>\n                    <input\n                      className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                      type=\"number\"\n                      value={this.state.blockNumber}\n                      name=\"block-number\"\n                      onChange={this.componentDidMount}\n                    />\n                  </div>\n                  <div className=\"mt3\">\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"address\">\n                      Contract Address\n                    </label>\n                    <input\n                      className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                      type=\"text\"\n                      value={this.state.contractAddress}\n                      name=\"address\"\n                      id=\"address\"\n                      onChange={this.componentDidMount}\n                    />\n                  </div>\n                  <div className=\"mt3\">\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"number\">\n                      Gas Used\n                    </label>\n                    <input\n                      className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                      type=\"number\"\n                      value={this.state.gasUsed}\n                      name=\"price\"\n                      id=\"price\"\n                      onChange={this.componentDidMount}\n                    />\n                  </div>\n                  <div className=\"mt3\">\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"number\">\n                      Transaction USed\n                    </label>\n                    <input\n                      className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                      type=\"text\"\n                      value={this.state.trxUsed}\n                      name=\"price\"\n                      id=\"price\"\n                      onChange={this.componentDidMount}\n                    />\n                  </div>\n                  <div className=\"mt3\">\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"number\">\n                      Ether Scan{\" \"}\n                    </label>\n                    <Nav.Link\n                      className=\"logo\"\n                      href={`https://ropsten.etherscan.io/tx/${\n                        this.state.trxUsed\n                      }`}\n                    >\n                      Transaction\n                    </Nav.Link>\n                    {/* <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                    value={`https://ropsten.etherscan.io/tx/${this.state.trxUsed}`} /> */}\n                  </div>\n                  {/* <input className='f4 pa2 w-70 center'  id=\"file\" type='file' name='file' onChange={(e) => this.onImageChange(e)} /> */}\n                  {/* <img src={`https://gateway.ipfs.io/ipfs/${this.state.data}`} alt=\"\"/> */}\n                  <button\n                    className=\"w-30 grow f4 link ph3 pv2 dib white bg-light-purple\"\n                    onClick={e => {\n                      this.componentDidMount(e);\n                    }}\n                  >\n                    Go to Home\n                  </button>\n                </fieldset>\n              </div>\n            </div>\n          </div>\n        </section>\n      </body>\n    );\n  }\n}\nexport default BlockChain;\n","import React, { Component } from \"react\";\n// import ReactDOM from 'react-dom';\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Signin from \"./components/Signin/Signin\";\n// import Register from './components/Register/Register';\nimport Logo from \"./components/Logo/Logo\";\nimport Rank from \"./components/Rank/Rank\";\nimport ErrorBoundry from \"./components/Navigation/ErrorBoundry\";\nimport Gas from \"./components/imageLink/gas\";\nimport ImageLink from \"./components/imageLink/imageLink\";\nimport BlockChain from './components/imageLink/blockchain';\nimport \"./App.css\";\n\nconst initialState = {\n  input: \"\",\n  route: \"signin\",\n  image: \"\",\n  searchfield: \"\",\n  imageIn: null,\n  isSignedIn: false,\n  isGasprice: false,\n  isBlock: false,\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    mobile: \"\",\n    entries: 0,\n    imageIn: \"\",\n    joined: new Date()\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n  loadUser = data => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        password: data.password,\n        mobile: data.mobile,\n        entries: data.entries,\n        joined: data.joined\n      }\n    });\n  };\n  loadForm = data => {\n    this.setState({\n      user: {\n        id: data.id,\n        ownername: data.ownername,\n        location: data.location,\n        address: data.address,\n        price: data.price,\n        // propertyname: data.propertyname,\n        // mobile: data.mobile,\n        // price: data.price,\n        // landetails: data.landetails,\n        entered: data.joined\n      }\n    });\n  };\n  invoice = data => {\n    this.setState({\n      user: {\n        assetid: data[\"assetid\"]\n        // blockNumber: data.blockNumber,\n        // blockHash: data.blockHash,\n        // contract: data.contract,\n        // gasUsed: data.gasUsed,\n        // trxUsed: data.trxUsed\n      }\n    });\n  };\n  onRouteChange = route => {\n    if (route === \"signout\") {\n      this.setState(initialState);\n    } else if (route === \"home\") {\n      this.setState({ isSignedIn: true });\n    } else if (route === \"gas\") {\n      this.setState({isGasprice: true})\n    } else if (route === \"blockchain\") {\n      this.setState({isBlock:true})\n    }\n    this.setState({ route: route });\n  };\n  onSearchChange = event => {\n    this.setState({ searchfield: event.target.value });\n  };\n  render() {\n    const { isSignedIn, route } = this.state;\n    return (\n      <div className=\"App\">\n        <Navigation\n          isSignedIn={isSignedIn}\n          onRouteChange={this.onRouteChange}\n        />\n        {route === \"home\" ? (\n          <div>\n            <Logo />\n            <Rank\n              name={this.state.user.name}\n              entries={this.state.user.entries}\n            />\n            <ErrorBoundry>\n              <ImageLink\n                onButtonSubmit={this.onButtonSubmit}\n                onRouteChange={this.onRouteChange}\n                assetid={this.state.asset_id}\n              />\n\n              {/* {route === 'blockchain' ?\n                  <Gas />\n                  :<Logo /> } */}\n            </ErrorBoundry>\n\n            {/* <Target /> */}\n          </div>\n        ) : route === \"signin\" ? (\n          <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n        ) \n        \n        :\n          <BlockChain />\n        } { route === \"blockchain\" ? (\n          <div>\n          {/* <BlockChain /> */}\n          </div>\n          ) \n          : <Navigation />\n        }\n        \n        \n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// impo rt App from './App';\n// import Server from './Server';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport App from './App';\n// import Menu from './components/Menu/menu';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// ReactDOM.render(<Menu />, document.getElementById(''));\nif(module.hot){\n    module.hot.accept()\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n    "],"sourceRoot":""}